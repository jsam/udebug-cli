// Code generated by go-swagger; DO NOT EDIT.

package output

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"os"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPostOutputAPIPostCustomInputOutputJSONParams creates a new PostOutputAPIPostCustomInputOutputJSONParams object
// with the default values initialized.
func NewPostOutputAPIPostCustomInputOutputJSONParams() *PostOutputAPIPostCustomInputOutputJSONParams {
	var ()
	return &PostOutputAPIPostCustomInputOutputJSONParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostOutputAPIPostCustomInputOutputJSONParamsWithTimeout creates a new PostOutputAPIPostCustomInputOutputJSONParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostOutputAPIPostCustomInputOutputJSONParamsWithTimeout(timeout time.Duration) *PostOutputAPIPostCustomInputOutputJSONParams {
	var ()
	return &PostOutputAPIPostCustomInputOutputJSONParams{

		timeout: timeout,
	}
}

// NewPostOutputAPIPostCustomInputOutputJSONParamsWithContext creates a new PostOutputAPIPostCustomInputOutputJSONParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostOutputAPIPostCustomInputOutputJSONParamsWithContext(ctx context.Context) *PostOutputAPIPostCustomInputOutputJSONParams {
	var ()
	return &PostOutputAPIPostCustomInputOutputJSONParams{

		Context: ctx,
	}
}

// NewPostOutputAPIPostCustomInputOutputJSONParamsWithHTTPClient creates a new PostOutputAPIPostCustomInputOutputJSONParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostOutputAPIPostCustomInputOutputJSONParamsWithHTTPClient(client *http.Client) *PostOutputAPIPostCustomInputOutputJSONParams {
	var ()
	return &PostOutputAPIPostCustomInputOutputJSONParams{
		HTTPClient: client,
	}
}

/*PostOutputAPIPostCustomInputOutputJSONParams contains all the parameters to send to the API endpoint
for the post output API post custom input output JSON operation typically these are written to a http.Request
*/
type PostOutputAPIPostCustomInputOutputJSONParams struct {

	/*Data
	  your input

	*/
	Data os.File
	/*JudgeAlias
	  name of judge(ex. UVa)

	*/
	JudgeAlias string
	/*ProblemID
	  id of problem(ex. 100)

	*/
	ProblemID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post output API post custom input output JSON params
func (o *PostOutputAPIPostCustomInputOutputJSONParams) WithTimeout(timeout time.Duration) *PostOutputAPIPostCustomInputOutputJSONParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post output API post custom input output JSON params
func (o *PostOutputAPIPostCustomInputOutputJSONParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post output API post custom input output JSON params
func (o *PostOutputAPIPostCustomInputOutputJSONParams) WithContext(ctx context.Context) *PostOutputAPIPostCustomInputOutputJSONParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post output API post custom input output JSON params
func (o *PostOutputAPIPostCustomInputOutputJSONParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post output API post custom input output JSON params
func (o *PostOutputAPIPostCustomInputOutputJSONParams) WithHTTPClient(client *http.Client) *PostOutputAPIPostCustomInputOutputJSONParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post output API post custom input output JSON params
func (o *PostOutputAPIPostCustomInputOutputJSONParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithData adds the data to the post output API post custom input output JSON params
func (o *PostOutputAPIPostCustomInputOutputJSONParams) WithData(data os.File) *PostOutputAPIPostCustomInputOutputJSONParams {
	o.SetData(data)
	return o
}

// SetData adds the data to the post output API post custom input output JSON params
func (o *PostOutputAPIPostCustomInputOutputJSONParams) SetData(data os.File) {
	o.Data = data
}

// WithJudgeAlias adds the judgeAlias to the post output API post custom input output JSON params
func (o *PostOutputAPIPostCustomInputOutputJSONParams) WithJudgeAlias(judgeAlias string) *PostOutputAPIPostCustomInputOutputJSONParams {
	o.SetJudgeAlias(judgeAlias)
	return o
}

// SetJudgeAlias adds the judgeAlias to the post output API post custom input output JSON params
func (o *PostOutputAPIPostCustomInputOutputJSONParams) SetJudgeAlias(judgeAlias string) {
	o.JudgeAlias = judgeAlias
}

// WithProblemID adds the problemID to the post output API post custom input output JSON params
func (o *PostOutputAPIPostCustomInputOutputJSONParams) WithProblemID(problemID string) *PostOutputAPIPostCustomInputOutputJSONParams {
	o.SetProblemID(problemID)
	return o
}

// SetProblemID adds the problemId to the post output API post custom input output JSON params
func (o *PostOutputAPIPostCustomInputOutputJSONParams) SetProblemID(problemID string) {
	o.ProblemID = problemID
}

// WriteToRequest writes these params to a swagger request
func (o *PostOutputAPIPostCustomInputOutputJSONParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form file param data
	if err := r.SetFileParam("data", &o.Data); err != nil {
		return err
	}

	// form param judge_alias
	frJudgeAlias := o.JudgeAlias
	fJudgeAlias := frJudgeAlias
	if fJudgeAlias != "" {
		if err := r.SetFormParam("judge_alias", fJudgeAlias); err != nil {
			return err
		}
	}

	// form param problem_id
	frProblemID := o.ProblemID
	fProblemID := frProblemID
	if fProblemID != "" {
		if err := r.SetFormParam("problem_id", fProblemID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
