// Code generated by go-swagger; DO NOT EDIT.

package input

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetInputAPIInputRetrieveJSONParams creates a new GetInputAPIInputRetrieveJSONParams object
// with the default values initialized.
func NewGetInputAPIInputRetrieveJSONParams() *GetInputAPIInputRetrieveJSONParams {
	var ()
	return &GetInputAPIInputRetrieveJSONParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetInputAPIInputRetrieveJSONParamsWithTimeout creates a new GetInputAPIInputRetrieveJSONParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetInputAPIInputRetrieveJSONParamsWithTimeout(timeout time.Duration) *GetInputAPIInputRetrieveJSONParams {
	var ()
	return &GetInputAPIInputRetrieveJSONParams{

		timeout: timeout,
	}
}

// NewGetInputAPIInputRetrieveJSONParamsWithContext creates a new GetInputAPIInputRetrieveJSONParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetInputAPIInputRetrieveJSONParamsWithContext(ctx context.Context) *GetInputAPIInputRetrieveJSONParams {
	var ()
	return &GetInputAPIInputRetrieveJSONParams{

		Context: ctx,
	}
}

// NewGetInputAPIInputRetrieveJSONParamsWithHTTPClient creates a new GetInputAPIInputRetrieveJSONParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetInputAPIInputRetrieveJSONParamsWithHTTPClient(client *http.Client) *GetInputAPIInputRetrieveJSONParams {
	var ()
	return &GetInputAPIInputRetrieveJSONParams{
		HTTPClient: client,
	}
}

/*GetInputAPIInputRetrieveJSONParams contains all the parameters to send to the API endpoint
for the get input API input retrieve JSON operation typically these are written to a http.Request
*/
type GetInputAPIInputRetrieveJSONParams struct {

	/*InputID
	  id of input(ex. 809768)

	*/
	InputID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get input API input retrieve JSON params
func (o *GetInputAPIInputRetrieveJSONParams) WithTimeout(timeout time.Duration) *GetInputAPIInputRetrieveJSONParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get input API input retrieve JSON params
func (o *GetInputAPIInputRetrieveJSONParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get input API input retrieve JSON params
func (o *GetInputAPIInputRetrieveJSONParams) WithContext(ctx context.Context) *GetInputAPIInputRetrieveJSONParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get input API input retrieve JSON params
func (o *GetInputAPIInputRetrieveJSONParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get input API input retrieve JSON params
func (o *GetInputAPIInputRetrieveJSONParams) WithHTTPClient(client *http.Client) *GetInputAPIInputRetrieveJSONParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get input API input retrieve JSON params
func (o *GetInputAPIInputRetrieveJSONParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithInputID adds the inputID to the get input API input retrieve JSON params
func (o *GetInputAPIInputRetrieveJSONParams) WithInputID(inputID string) *GetInputAPIInputRetrieveJSONParams {
	o.SetInputID(inputID)
	return o
}

// SetInputID adds the inputId to the get input API input retrieve JSON params
func (o *GetInputAPIInputRetrieveJSONParams) SetInputID(inputID string) {
	o.InputID = inputID
}

// WriteToRequest writes these params to a swagger request
func (o *GetInputAPIInputRetrieveJSONParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param input_id
	qrInputID := o.InputID
	qInputID := qrInputID
	if qInputID != "" {
		if err := r.SetQueryParam("input_id", qInputID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
